{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","startTimer","setInterval","setState","console","log","toLocaleTimeString","this","clearInterval","props","name","React","Component","names","App","isVisible","showClock","hideClock","shuffleTitles","Math","floor","random","length","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNASaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,WAAaC,aAAY,WACvB,EAAKC,SAAS,CAAEJ,YAAa,IAAIC,OAGjCI,QAAQC,IAAI,EAAKP,MAAMC,YAAYO,wBAClC,KAVL,uDAYE,WACE,OAAOC,KAAKN,aAbhB,kCAgBE,WACEO,cAAcD,KAAKN,cAjBvB,oBAoBE,WACE,OACE,qCACE,6BAAKM,KAAKE,MAAMC,OAChB,8BACE,kDACA,sBAAM,UAAQ,OAAd,SACGH,KAAKT,MAAMC,YAAYO,iCA3BpC,GAA2BK,IAAMC,WCL3BC,EAAkB,CAAC,OAAQ,UAAW,eAAgB,gBAOtDC,E,4MACJhB,MAAQ,CACNiB,WAAW,EACXL,KAAM,gB,EAGRM,UAAY,WACV,EAAKb,SAAS,CAAEY,WAAW,K,EAG7BE,UAAY,WACV,EAAKd,SAAS,CAAEY,WAAW,K,EAG7BG,cAAgB,WACd,EAAKf,SACH,CAAEO,KAAMG,EAAMM,KAAKC,MAAMD,KAAKE,SAAWR,EAAMS,Y,4CAInD,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,qBAAKA,UAAU,QAAf,SACIhB,KAAKT,MAAMiB,WAAe,cAAC,EAAD,CAAOL,KAAMH,KAAKT,MAAMY,SAEtD,wBAAQc,KAAK,SAASC,QAASlB,KAAKS,UAApC,wBAGA,wBAAQQ,KAAK,SAASC,QAASlB,KAAKU,UAApC,wBAGA,wBAAQO,KAAK,SAASC,QAASlB,KAAKW,cAApC,qC,GAjCUP,IAAMC,WAyCTE,ICjDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.73a33fa6.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  startTimer = setInterval(() => {\n    this.setState({ currentTime: new Date() });\n\n    // eslint-disable-next-line\n    console.log(this.state.currentTime.toLocaleTimeString());\n  }, 1000);\n\n  componentDidMount() {\n    return this.startTimer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.startTimer);\n  }\n\n  render() {\n    return (\n      <>\n        <h2>{this.props.name}</h2>\n        <p>\n          <span>Current time: </span>\n          <span data-cy=\"time\">\n            {this.state.currentTime.toLocaleTimeString()}\n          </span>\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nconst names: string[] = ['Mate', 'Academy', 'Mate academy', 'Academy mate'];\n\ntype State = {\n  isVisible: boolean;\n  name: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isVisible: true,\n    name: 'Mate academy',\n  };\n\n  showClock = () => {\n    this.setState({ isVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isVisible: false });\n  };\n\n  shuffleTitles = () => {\n    this.setState(\n      { name: names[Math.floor(Math.random() * names.length)] },\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"clock\">\n          {(this.state.isVisible) && (<Clock name={this.state.name} />)}\n        </div>\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n        <button type=\"button\" onClick={this.shuffleTitles}>\n          Set random title\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}